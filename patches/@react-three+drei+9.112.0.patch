diff --git a/node_modules/@react-three/drei/web/PresentationControls.d.ts b/node_modules/@react-three/drei/web/PresentationControls.d.ts
index 5bf0a2e..3aab5f2 100644
--- a/node_modules/@react-three/drei/web/PresentationControls.d.ts
+++ b/node_modules/@react-three/drei/web/PresentationControls.d.ts
@@ -14,4 +14,25 @@ export type PresentationControlProps = {
     children?: React.ReactNode;
     domElement?: HTMLElement;
 };
-export declare function PresentationControls({ enabled, snap, global, domElement, cursor, children, speed, rotation, zoom, polar, azimuth, config, }: PresentationControlProps): React.JSX.Element;
+
+export type PresentationControlsRef = {
+    rotateTo: (newRotation: [number, number, number]) => void;
+};
+    
+export declare function PresentationControls({
+    enabled,
+    snap,
+    global,
+    domElement,
+    cursor,
+    children,
+    speed,
+    rotation,
+    zoom,
+    polar,
+    azimuth,
+    config,
+    ref,
+}: PresentationControlProps & {
+    ref?: React.Ref<PresentationControlsRef>;
+}): React.JSX.Element;
diff --git a/node_modules/@react-three/drei/web/PresentationControls.js b/node_modules/@react-three/drei/web/PresentationControls.js
index 0d5a2f4..3076c45 100644
--- a/node_modules/@react-three/drei/web/PresentationControls.js
+++ b/node_modules/@react-three/drei/web/PresentationControls.js
@@ -5,7 +5,7 @@ import { useThree } from '@react-three/fiber';
 import { useSpring, a } from '@react-spring/three';
 import { useGesture } from '@use-gesture/react';
 
-function PresentationControls({
+const PresentationControls = React.forwardRef(function PresentationControls({
   enabled = true,
   snap,
   global,
@@ -22,7 +22,8 @@ function PresentationControls({
     tension: 170,
     friction: 26
   }
-}) {
+},
+ref) {
   const events = useThree(state => state.events);
   const gl = useThree(state => state.gl);
   const explDomElement = domElement || events.connected || gl.domElement;
@@ -52,6 +53,29 @@ function PresentationControls({
       };
     }
   }, [global, cursor, explDomElement, enabled]);
+
+  const rotateTo = React.useCallback(
+    (newRotation) => {
+      api.start({
+        rotation: [
+          MathUtils.clamp(newRotation[0], ...rPolar),
+          MathUtils.clamp(newRotation[1], ...rAzimuth),
+          newRotation[2],
+        ],
+        config,
+      });
+    },
+    [api, rPolar, rAzimuth, config]
+  );
+    
+  React.useImperativeHandle(
+    ref,
+    () => ({
+      rotateTo,
+    }),
+    [rotateTo]
+  );
+
   const bind = useGesture({
     onHover: ({
       last
@@ -82,6 +106,6 @@ function PresentationControls({
     target: global ? explDomElement : undefined
   });
   return /*#__PURE__*/React.createElement(a.group, _extends({}, bind == null ? void 0 : bind(), spring), children);
-}
+})
 
 export { PresentationControls };
